{
  "openapi": "3.0.0",
  "info": {
    "title": "Laravel API",
    "description": "API Documentation for Laravel API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/",
      "description": "API Server"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Register a new user.",
        "operationId": "d764dd091cc4494ae0baf360b03319f3",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "email",
                  "password",
                  "password_confirmation"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully."
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResource"
                    },
                    "token": {
                      "type": "string",
                      "example": "1|laravel_sanctum_token..."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login and get authentication token",
        "description": "Login user and create token.",
        "operationId": "8dcb70df1020986038d098cc08d05dae",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful."
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResource"
                    },
                    "token": {
                      "type": "string",
                      "example": "1|laravel_sanctum_token..."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout and invalidate token",
        "description": "Logout user (revoke token).",
        "operationId": "69281b12abb272c76871f19cb17ca563",
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated"
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/auth/user": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get authenticated user details",
        "description": "Get authenticated user.",
        "operationId": "e23e5f9b32cba7953a224624a2a16544",
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated"
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/notes": {
      "get": {
        "tags": ["Notes"],
        "summary": "Get all notes",
        "description": "List all notes with their authors.",
        "operationId": "9a95bde5931986ad60b9f7f414ec425e",
        "responses": {
          "200": {
            "description": "List of notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NoteResource"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Notes"],
        "summary": "Create a new note",
        "description": "Create a new note for the authenticated user.",
        "operationId": "d133c170557b4935898f2e444e0fd418",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["title", "content"],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "My Note Title"
                  },
                  "content": {
                    "type": "string",
                    "example": "This is the content of my note"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteResource"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated"
          },
          "422": {
            "description": "Validation error"
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "NoteResource": {
        "title": "Note Resource",
        "description": "Note resource representation",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "My First Note"
          },
          "content": {
            "type": "string",
            "example": "This is the content of my first note"
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "authorName": {
            "type": "string",
            "example": "John Doe"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-07T01:00:00.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-07T01:00:00.000000Z"
          }
        },
        "type": "object"
      },
      "UserResource": {
        "title": "User Resource",
        "description": "User resource representation",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-07T01:00:00.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-07T01:00:00.000000Z"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "sanctum": {
        "type": "http",
        "bearerFormat": "JWT",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "API Endpoints for User Authentication"
    },
    {
      "name": "Notes",
      "description": "API Endpoints for Notes"
    }
  ]
}
