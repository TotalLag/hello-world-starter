{
  "openapi": "3.1.0",
  "info": {
    "title": "Laravel",
    "version": "1.0.0",
    "description": "API documentation for the Laravel API backend. This API provides endpoints for authentication and note management."
  },
  "servers": [
    {
      "url": "http:\/\/127.0.0.1:8000\/api"
    }
  ],
  "paths": {
    "\/auth\/register": {
      "post": {
        "operationId": "auth.register",
        "description": "Custom validation error messages for this endpoint are defined in ExtendedRegisterSchema\nat packages\/api-types\/src\/extendedSchemas.ts.",
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application\/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                  },
                  "password": {
                    "type": "string"
                  },
                  "password_confirmation": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password",
                  "password_confirmation"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully."
                    },
                    "user": {
                      "$ref": "#\/components\/schemas\/UserResource"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": ["message", "user", "token"]
                }
              }
            }
          },
          "422": {
            "$ref": "#\/components\/responses\/ValidationException"
          }
        }
      }
    },
    "\/auth\/login": {
      "post": {
        "operationId": "auth.login",
        "description": "Custom validation error messages for this endpoint are defined in ExtendedLoginSchema\nat packages\/api-types\/src\/extendedSchemas.ts.",
        "summary": "Login user and create authentication token",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application\/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful."
                    },
                    "user": {
                      "$ref": "#\/components\/schemas\/UserResource"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": ["message", "user", "token"]
                }
              }
            }
          },
          "422": {
            "$ref": "#\/components\/responses\/ValidationException"
          }
        }
      }
    },
    "\/auth\/logout": {
      "post": {
        "operationId": "auth.logout",
        "summary": "Logout user (revoke token)",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully."
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "401": {
            "$ref": "#\/components\/responses\/AuthenticationException"
          }
        }
      }
    },
    "\/auth\/user": {
      "get": {
        "operationId": "auth.user",
        "summary": "Get authenticated user details",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "Return the authenticated user\n\n\n\n`UserResource`",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#\/components\/responses\/AuthenticationException"
          }
        }
      }
    },
    "\/notes": {
      "get": {
        "operationId": "note.index",
        "description": "Retrieves all notes from the database with their associated authors.\nThis endpoint is public and does not require authentication.",
        "summary": "List all notes with their authors",
        "tags": ["Note"],
        "responses": {
          "200": {
            "description": "Return JSON response containing array of notes using NoteResource\n\n\n\nArray of `NoteResource`",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/NoteResource"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "note.store",
        "description": "Custom validation error messages for this endpoint are defined in ExtendedNoteSchema\nat packages\/api-types\/src\/extendedSchemas.ts.",
        "summary": "Create a new note for the authenticated user",
        "tags": ["Note"],
        "requestBody": {
          "required": true,
          "content": {
            "application\/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": ["title", "content"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return JSON response with HTTP 201 Created status using NoteResource\n\n\n\n`NoteResource`",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/NoteResource"
                }
              }
            }
          },
          "422": {
            "$ref": "#\/components\/responses\/ValidationException"
          },
          "401": {
            "$ref": "#\/components\/responses\/AuthenticationException"
          }
        }
      }
    },
    "\/documentation": {
      "get": {
        "operationId": "l5-swagger.default.api",
        "summary": "Handles the API request and renders the Swagger documentation view",
        "tags": ["Swagger"],
        "responses": {
          "200": {
            "description": "Need the \/ at the end to avoid CORS errors on Homestead systems.",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "\/oauth2-callback": {
      "get": {
        "operationId": "l5-swagger.default.oauth2_callback",
        "summary": "Handles the OAuth2 callback and retrieves the required file for the redirect",
        "tags": ["Swagger"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NoteResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "userId": {
            "type": "integer"
          },
          "authorName": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "userId",
          "created_at",
          "updated_at"
        ],
        "title": "NoteResource"
      },
      "UserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": ["id", "name", "email", "created_at", "updated_at"],
        "title": "UserResource"
      }
    },
    "responses": {
      "ValidationException": {
        "description": "Validation error",
        "content": {
          "application\/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Errors overview."
                },
                "errors": {
                  "type": "object",
                  "description": "A detailed description of each field that failed validation.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": ["message", "errors"]
            }
          }
        }
      },
      "AuthenticationException": {
        "description": "Unauthenticated",
        "content": {
          "application\/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": ["message"]
            }
          }
        }
      }
    }
  }
}
